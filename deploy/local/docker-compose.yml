services:
  auth:
    build:
      context: ../../auth
      dockerfile: Dockerfile
    env_file:
      - ../../auth/.env 
    ports:
      - "8081:8081"
    depends_on:
      users:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "8081"]
      interval: 5s
      timeout: 5s
      retries: 5

  users:
    build:
      context: ../../users
      dockerfile: Dockerfile
    env_file:
      - ../../users/.env
    secrets:
      - db_password
    ports:
      - "8082:8082"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  postgres:
    image: postgres:17-alpine
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB_NAME}
      POSTGRES_PASSWORD_FILE: ${POSTGRES_PASSWORD_FILE} 
    secrets:
      - db_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5


secrets:
  db_password:
    file: ./secrets/dbpass.txt

volumes:
  postgres_data:
